#! /bin/bash

if [ -z "$BASH" ]
then
	cat >&2 <<EOF
	extargsparse4sh only running in bash mode
	please use bash to call this script BASH($BASH)
EOF
	exit 4
fi

_extargsparse4sh_bash=$( echo "$BASH" | grep -e '\/bash$'  )
if [ -z "$_extargsparse4sh_bash" ]
    then
    cat >&2 <<EOF
    extargsparse4sh only running in bash mode
    please use bash to call this script BASH($BASH)
EOF
    exit 4
fi


if [ -z "$PYTHON" ]
    then
    PYTHON=python
fi

read -r -d '' EXTARGSPARSE <<EXTEOF
%EXTARGSPARSE%
EXTEOF

function get_caller_prog()
{
    local _stkidx=1
    local _callidx=0
    local _file
    local _func
    local _retfile=""
    local _line
    while [ 1 ]
    do
        _file=${BASH_SOURCE[$_stkidx]}
        _func=${FUNCNAME[$_stkidx]}
        _line=${BASH_LINENO[$_callidx]}
        if [  "$_func"  = "main" ]
            then
            _retfile=$_file
            _retfile=`basename $_retfile`
            break
        fi
        #echo "[$_stkidx] file [$_file] func [$_func] line [$_line]"
        _stkidx=`expr $_stkidx \+ 1`
        _callidx=`expr $_stkidx - 1`
    done
    echo "$_retfile"
    return
}


parse_command_line_ex()
{
    local _jsonparse="$1"
    local _extoptionstr="$2"
    local _realextopt=""
    local _parsestr
    local _vermode=""
    local _caller=""
    local _i
    local _declfile=""
    shift
    shift

    _caller=$(get_caller_prog)

    if [ -n "$EXTARGSPARSE_LOGLEVEL" ] && [ $EXTARGSPARSE_LOGLEVEL -ge 2 ]
        then
        #echo "_jsonparse($_jsonparse) _extoptionstr($_extoptionstr) args($@)cnt($#) output($EXTARGSPARSE)" >&2
        echo "_jsonparse($_jsonparse) _extoptionstr($_extoptionstr) args($@)cnt($#)" >&2
        _vermode="-"
        for _i in $(seq 1 $EXTARGSPARSE_LOGLEVEL)
        do
            _vermode="${_vermode}v"
        done
    fi

    if [ -n "$EXTARGSPARSE_LOGLEVEL" ] && [ $EXTARGSPARSE_LOGLEVEL -ge 2 ]
        then
        echo "_caller [$_caller]" >&2
    fi

    _realextopt=`$PYTHON -c "$EXTARGSPARSE" $_vermode -O "$_extoptionstr" formatprog "$_caller"`

    _declfile=`mktemp`
    declare | $PYTHON -c "$EXTARGSPARSE" $_vermode  declare -o $_declfile
    _parsestr=$(echo "$_jsonparse" | $PYTHON -c "$EXTARGSPARSE" $_vermode  --options "$_realextopt" --declfile "$_declfile" --caption "$0"  parse -- "$@" )
    #_parsestr=$(echo "$_jsonparse" | $PYTHON -c "$EXTARGSPARSE" $_vermode  --caption "$0"  parse -- "$@" )
    if [ -n "$EXTARGSPARSE_LOGLEVEL" ] && [ $EXTARGSPARSE_LOGLEVEL -ge 2 ]
       then
       echo "_declfile($_declfile) _parsestr ($_parsestr)" >&2
    fi    
    eval "$_parsestr" 2>/dev/null
    rm -f $_declfile
    return

}

parse_command_line()
{
	local _jsonparse=$1
    shift 
    parse_command_line_ex "$_jsonparse" "{}" "$@"
    return
}


extargsparse4sh_version()
{
	echo "%EXTARGSPARSE4SH_VERSION%"
	return
}